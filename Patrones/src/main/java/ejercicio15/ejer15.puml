@startuml

class Catalogo {
+getComponente(descripcion:String):Componente
}
Catalogo --> Componente: -componentes 0..*

class Componente {
-nombre:String
-descripcion:String
-precio:Real
-consumo:Real
+getComsumo():Real
+getPrecio():Real
+add()
+getChilds():List<Producto>
}

class PC <<Product>>{
+setProce(c:Componente)
+setRAM(c:Componente)
+setDisco(c:Componente)
+setGrafica(c:Componente)
+setGabinete(c:Componente)
+getConsumo():Real
+getPrecio():Real
}
PC --> Componente : -procesador
PC --> Componente : -ram
PC --> Componente : -disco
PC --> Componente : -grafica
PC --> Componente : -gabinete

class Presupuesto{
-nombre:String
-fecha:LocalDate
-pc:PC
+getPrecio():Real
}

class Negocio <<Director>>{
+crearPC()
+setBuilder(b:BuilderPC)
+crearPresupuesto(nombre:String,pc:PC):Presupuesto
}
Negocio --> BuilderPC : -builder
Negocio --> Catalogo : -catalogo
class BuilderPC <<Builder>>{
+reset()
+<<abstract>> setProce(c:Catalogo)
+<<abstract>> setRAM(c:Catalogo)
+<<abstract>> setDisco(c:Catalogo)
+<<abstract>> setGrafica(c:Catalogo)
+<<abstract>> setGabinete(c:Catalogo)
+getPC():PC
}
BuilderPC -> PC : -pc

class BuilderBasico <<ConcreteBuilder>> extends BuilderPC{
}
class BuilderIntermedio <<ConcreteBuilder>> extends BuilderPC{
}
class BuilderGamer <<ConcreteBuilder>> extends BuilderPC{
}

@enduml
